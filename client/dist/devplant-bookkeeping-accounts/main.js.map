{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/components/breadcrumbs/breadcrumbs.component.ts","./src/app/common/components/breadcrumbs/breadcrumbs.component.html","./src/app/common/components/components.module.ts","./src/app/common/components/error-viewer/error-viewer.component.ts","./src/app/common/components/error-viewer/error-viewer.component.html","./src/app/common/components/index.ts","./src/app/common/constants.ts","./src/app/common/index.ts","./src/app/common/services/accounts.service.ts","./src/app/common/services/transaction-rules.service.ts","./src/app/common/validators/custom-validators.ts","./src/app/common/validators/index.ts","./src/app/screens/accounts-screen/accounts-screen.component.ts","./src/app/screens/accounts-screen/accounts-screen.component.html","./src/app/screens/accounts-screen/accounts-screen.module.ts","./src/app/screens/accounts-screen/index.ts","./src/app/screens/landing-screen/index.ts","./src/app/screens/landing-screen/landing-screen.component.ts","./src/app/screens/landing-screen/landing-screen.component.html","./src/app/screens/landing-screen/landing-screen.module.ts","./src/app/screens/transaction-rules-screen/index.ts","./src/app/screens/transaction-rules-screen/transaction-rules-modal/transaction-rules-modal.component.ts","./src/app/screens/transaction-rules-screen/transaction-rules-modal/transaction-rules-modal.component.html","./src/app/screens/transaction-rules-screen/transaction-rules-screen.component.ts","./src/app/screens/transaction-rules-screen/transaction-rules-screen.component.html","./src/app/screens/transaction-rules-screen/transaction-rules-screen.module.ts","./src/app/screens/transaction-rules-screen/transaction-rules-table/transaction-rules-table.component.ts","./src/app/screens/transaction-rules-screen/transaction-rules-table/transaction-rules-table.component.html","./src/app/screens/validate-transactions-screen/index.ts","./src/app/screens/validate-transactions-screen/validate-transactions-screen.component.ts","./src/app/screens/validate-transactions-screen/validate-transactions-screen.component.html","./src/app/screens/validate-transactions-screen/validate-transactions-screen.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LandingScreenComponent} from './screens/landing-screen';\nimport {TransactionRulesScreenComponent} from './screens/transaction-rules-screen';\nimport {ValidateTransactionsScreenComponent} from './screens/validate-transactions-screen';\nimport {AccountsScreenComponent} from './screens/accounts-screen';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LandingScreenComponent,\n    children: [\n      {\n        path: '',\n        component: AccountsScreenComponent\n      },\n      {\n        path: 'rules',\n        component: TransactionRulesScreenComponent\n      },\n      {\n        path: 'validate',\n        component: ValidateTransactionsScreenComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'devplant-bookkeeping-accounts';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ValidateTransactionsScreenModule} from './screens/validate-transactions-screen';\nimport {TransactionRulesScreenModule} from './screens/transaction-rules-screen';\nimport {AccountsScreenModule} from './screens/accounts-screen';\nimport {LandingScreenModule} from './screens/landing-screen';\nimport {RouterModule} from '@angular/router';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    ValidateTransactionsScreenModule,\n    TransactionRulesScreenModule,\n    AccountsScreenModule,\n    LandingScreenModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport {BreadcrumbModel} from './model/breadcrumbs.model';\n\n@Component({\n  selector: 'app-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss']\n})\nexport class BreadcrumbsComponent implements OnInit {\n\n  @Input() breadcrumbs: BreadcrumbModel[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"breadcrumbs-wrapper\">\n  <span class=\"breadcrumb-element\" *ngFor=\"let breadcrumb of breadcrumbs\">\n    <a [routerLink]=\"[breadcrumb.route]\">{{breadcrumb.name}}</a>\n    <span class=\"separator\"> / </span>\n  </span>\n</div>\n","import {NgModule} from '@angular/core';\nimport { ErrorViewerComponent } from './error-viewer/error-viewer.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {CommonModule} from '@angular/common';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n  declarations: [\n    ErrorViewerComponent,\n    BreadcrumbsComponent\n  ],\n  imports: [\n    MatInputModule,\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    ErrorViewerComponent,\n    BreadcrumbsComponent\n  ],\n})\n\nexport class ComponentsModule {}\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {ValidationErrors} from '@angular/forms';\nimport {ERROR_MESSAGES} from '../../constants';\n\n@Component({\n  selector: 'app-error-viewer',\n  templateUrl: './error-viewer.component.html',\n  styleUrls: ['./error-viewer.component.scss']\n})\nexport class ErrorViewerComponent implements OnInit, OnChanges {\n\n  @Input() errors: ValidationErrors | null;\n  errorMessage = '';\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.errors?.currentValue) {\n      this.updateErrorMessage(changes.errors.currentValue);\n    }\n  }\n\n  private updateErrorMessage(validationErrors: ValidationErrors): void {\n    for (const errorKey of Object.keys(ERROR_MESSAGES)) {\n      if (errorKey in validationErrors) {\n        this.errorMessage = ERROR_MESSAGES[errorKey];\n        break;\n      }\n    }\n  }\n\n}\n","<div *ngIf=\"errorMessage\">\n  {{errorMessage}}\n</div>\n\n","export * from '../components/components.module';\n","export const ACCOUNTS_SCREEN_MESSAGE = {\n  saved_accounts: 'You currently have {} accounts saved. What you want to do next?',\n  unsaved_accounts: 'I can see that you didn\\'t added any accounts yet. Please add some accounts before you do any operation'\n};\n\nexport const ERROR_MESSAGES = {\n  required: 'This field is required',\n  invalidAccount: 'You need to pick an account from the list',\n  differentAccount: 'Credit account and debit account should not be the same'\n};\n\nexport const MOCK_RULES = [\n  {\n    id: 1,\n    debitAccount: '1011',\n    creditAccount: '1012',\n    description: 'Registering acquired goods from the supplier'\n  },\n  {\n    id: 2,\n    debitAccount: '1011',\n    creditAccount: '1016',\n    description: 'Registering alimentary goods from a local business. Goods needs to be eco'\n  },\n  {\n    id: 3,\n    debitAccount: '1011',\n    creditAccount: '1044',\n    description: 'Registering material goods from a charity organisation. The materials value should be under 100.000$'\n  },\n  {\n    id: 4,\n    debitAccount: '1044',\n    creditAccount: '1012',\n    description: 'Moving goods from alimentary department to the IT department'\n  },\n  {\n    id: 5,\n    debitAccount: '1044',\n    creditAccount: '1011',\n    description: 'For taxes purposes'\n  },\n  {\n    id: 6,\n    debitAccount: '121',\n    creditAccount: '131',\n    description: 'Money loan to one of the entities registered in the business'\n  },\n  {\n    id: 7,\n    debitAccount: '133',\n    creditAccount: '131',\n    description: 'To pay for the consumables from production '\n  },\n  {\n    id: 8,\n    debitAccount: '1511',\n    creditAccount: '1512',\n    description: 'Payment of annual interest on loans for production machinery'\n  },\n  {\n    id: 9,\n    debitAccount: '1511',\n    creditAccount: '1516',\n    description: 'Donations to charitiesr'\n  },\n  {\n    id: 10,\n    debitAccount: '1614',\n    creditAccount: '1617',\n    description: 'Improving anti-pollution systems'\n  },\n  {\n    id: 11,\n    debitAccount: '1682',\n    creditAccount: '1685',\n    description: 'Registering acquired gods from the supplier'\n  }\n];\n","export * from './constants';\nexport * from './services/accounts.service';\nexport * from './services/transaction-rules.service';\nexport * from './models/account.model';\nexport * from './models/transaction-rule.model';\nexport * from './components/index';\nexport * from './validators/index';\n","import { Injectable } from '@angular/core';\nimport {NgxCsvParser, NgxCSVParserError} from 'ngx-csv-parser';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {AccountModel} from '../models/account.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountsService {\n\n  constructor(private ngxCsvParser: NgxCsvParser ) { }\n\n  parseCSV(file: File): Observable<AccountModel []> {\n    return this.ngxCsvParser.parse(file, {header: false, delimiter: ','}).pipe(\n      map((files) => {\n        if (files instanceof NgxCSVParserError) {\n          return null;\n        } else {\n          return files.map(rowFile => {\n            return {\n              id: rowFile[0],\n              name: rowFile[1]\n            };\n          });\n        }\n      })\n    );\n  }\n\n  saveAccounts(accounts: AccountModel[]): void {\n    localStorage.setItem('saved_accounts', JSON.stringify(accounts));\n  }\n\n  getAccounts(): AccountModel[] {\n    return JSON.parse(localStorage.getItem('saved_accounts'));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {TransactionRuleModel} from '../models/transaction-rule.model';\nimport {BehaviorSubject} from 'rxjs';\nimport {MOCK_RULES} from '../constants';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TransactionRulesService {\n  private allRules: TransactionRuleModel[] = [];\n  rulesChangeEvent: BehaviorSubject<TransactionRuleModel[]> = new BehaviorSubject<TransactionRuleModel[]>([]);\n\n  constructor() {\n  }\n\n  getRules(): BehaviorSubject<TransactionRuleModel[]> {\n    if (!this.allRules || this.allRules.length === 0) {\n      this.allRules = this._getRules();\n    }\n    this.rulesChangeEvent.next(this.allRules);\n    return this.rulesChangeEvent;\n  }\n\n  addRule(rule: TransactionRuleModel): void {\n    this.allRules.push(rule);\n    this._saveRules(this.allRules);\n    this.rulesChangeEvent.next(this.allRules);\n  }\n\n  editRule(editedRule: TransactionRuleModel): void {\n    const ruleIndex = this.allRules.findIndex(rule => rule.id === editedRule.id);\n    this.allRules[ruleIndex] = editedRule;\n    this._saveRules(this.allRules);\n    this.rulesChangeEvent.next(this.allRules);\n  }\n\n  deleteRule(rule: TransactionRuleModel): void {\n    this.allRules = this.allRules.filter(filteredRule => filteredRule.id !== rule.id);\n    this._saveRules(this.allRules);\n    this.rulesChangeEvent.next(this.allRules);\n  }\n\n  addMockedRules(): void {\n    this.allRules = MOCK_RULES;\n    this._saveRules(this.allRules);\n    this.rulesChangeEvent.next(this.allRules);\n  }\n\n  private _saveRules(rules: TransactionRuleModel[]): void {\n    localStorage.setItem('transaction_rules', JSON.stringify(rules));\n  }\n\n  private _getRules(): TransactionRuleModel[] {\n    return JSON.parse(localStorage.getItem('transaction_rules')) || [];\n  }\n}\n","import {AbstractControl, ValidationErrors, ValidatorFn} from '@angular/forms';\nimport {AccountModel} from '../models/account.model';\n\nexport function differentValuesValidator(firstControlName: string): ValidatorFn {\n  return (secondControl: AbstractControl): ValidationErrors | null => {\n    if (!secondControl.parent?.get(firstControlName)){\n      return null;\n    }\n    const firstControl = secondControl.parent.get(firstControlName);\n\n    if (firstControl.disabled) {\n      return null;\n    }\n\n    let isDifferent = true;\n    if (firstControl?.value !== '' && secondControl?.value !== '' && firstControl?.value === secondControl?.value) {\n      isDifferent = false;\n    }\n\n    return !isDifferent ? {differentAccount: false} : null;\n  };\n}\n\nexport function accountValidator(allAccounts: AccountModel[]): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const isIn = allAccounts.some(account => account.id === control.value);\n    return !isIn ? {invalidAccount: true} : null;\n  };\n}\n","export * from './custom-validators';\n","import { Component, OnInit } from '@angular/core';\nimport {AccountsService, AccountModel} from '../../common';\nimport {ACCOUNTS_SCREEN_MESSAGE} from '../../common';\n\n@Component({\n  selector: 'app-accounts-screen',\n  templateUrl: './accounts-screen.component.html',\n  styleUrls: ['./accounts-screen.component.scss']\n})\nexport class AccountsScreenComponent implements OnInit {\n  allAccounts: AccountModel [] = [];\n  dynamicMessage: string = '';\n\n  constructor(private accountsService: AccountsService) { }\n\n  ngOnInit(): void {\n    this.allAccounts = this.accountsService.getAccounts();\n    this.updateScreenMessages();\n  }\n\n  readCSV(event: any): void {\n    const file = event.target.files[0];\n    this.accountsService.parseCSV(file).subscribe((parsedFiles) => {\n      if (parsedFiles?.length) {\n        this.accountsService.saveAccounts(parsedFiles);\n        this.allAccounts = parsedFiles;\n        this.updateScreenMessages();\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  updateScreenMessages(): void {\n    if (this.allAccounts?.length) {\n      this.dynamicMessage = ACCOUNTS_SCREEN_MESSAGE.saved_accounts.replace('{}', this.allAccounts.length.toString());\n    } else {\n      this.dynamicMessage = ACCOUNTS_SCREEN_MESSAGE.unsaved_accounts;\n    }\n  }\n\n}\n","<div class=\"accunts-screen-wrapper\">\n  <span class=\"screen-title\">\n    <span class=\"color-green-1 first-word\">Bookkeeping accounts</span>\n    <span>\n     is an application that let you store some accounts and setup a set of rules of transactions in order to check\n    if a transaction between two accounts is legal or not. Pretty fancy, no?\n    </span>\n  </span>\n  <div>\n    <div>\n      <h4>\n        In order to use this application, you need to upload a CSV with the accounts on which you want to set\n        the transaction rules. The CSV should be in a two columns format having a comma ',' as a separator between the\n        columns. First column represents an unique identifier and the second one is the account name. You can\n        find a list of the valid accounts in Romania\n        <a target=\"_blank\" href=\"https://drive.google.com/file/d/1VRA8Ygkn8QMTUG-9fSd3lsslLQXml-VD/view?usp=sharing\">here</a>\n      </h4>\n      <h4 style=\"margin:0\">\n        Valid accounts example:\n      </h4>\n\n      <div class=\"accounts-example\">\n        <div>\n          ...\n        </div>\n        <div>\n          361,Animale și păsări\n        </div>\n        <div>\n          368,Diferențe de preț la animale și păsări\n        </div>\n        <div>\n          371,Mărfuri\n        </div>\n        <div>\n          378,Diferențe de preț la mărfuri\n        </div>\n        <div>\n          ...\n        </div>\n      </div>\n\n      <h4>\n        After you uploaded your accounts, you can now set some transaction rules. To do that, click on\n        <b>\"Transaction Rules\"</b> button from below and the transaction rules screen will be prompted to you. There\n        you can add rules between multiple accounts in order to easily see under what circumstances you are allowed\n        to move assets from one account to another.\n      </h4>\n\n      <h4>\n        What remains to be done now is to go to the <b>\"Check Transactions Validity\"</b> section so that you can check\n        where and from which accounts you can move your assets. As they say, keep your assets close and your transaction rules\n        closer.\n      </h4>\n    </div>\n    <h1>{{dynamicMessage}}</h1>\n    <div class=\"accounts-screen-actions\">\n      <div *ngIf=\"!allAccounts?.length\">\n        <input type=\"file\" accept=\".csv\" (change)=\"readCSV($event)\">\n      </div>\n      <!--TODO make an route guard to accces routes only if you have accounts saved-->\n      <div class=\"actions-wrapper\" *ngIf=\"allAccounts?.length > 0\">\n        <div>\n          <button [routerLink]=\"['/rules']\"\n                  mat-raised-button\n                  class=\"background-green-1\">\n            <mat-icon>create</mat-icon>Transactions Rules\n          </button>\n        </div>\n        <div>\n          <button [routerLink]=\"['/validate']\"\n                  mat-raised-button\n                  color=\"warn\">\n            <mat-icon>check_circle_outline</mat-icon>\n            Check Transactions Validity\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {AccountsScreenComponent} from './accounts-screen.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {NgxCsvParserModule} from 'ngx-csv-parser';\nimport {MatButtonModule} from '@angular/material/button';\nimport {RouterModule} from '@angular/router';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [\n    AccountsScreenComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgxCsvParserModule,\n    MatButtonModule,\n    RouterModule,\n    MatIconModule\n  ],\n  exports: [\n    AccountsScreenComponent\n  ]\n})\n\nexport class AccountsScreenModule {}\n","export * from './accounts-screen.component';\nexport * from './accounts-screen.module';\n","export * from './landing-screen.component';\nexport * from './landing-screen.module';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-screen',\n  templateUrl: './landing-screen.component.html',\n  styleUrls: ['./landing-screen.component.scss']\n})\nexport class LandingScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"box-1 flex-container\">\n  <router-outlet></router-outlet>\n</div>\n\n","import {NgModule} from '@angular/core';\nimport {LandingScreenComponent} from './landing-screen.component';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n  declarations: [\n    LandingScreenComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    LandingScreenComponent\n  ]\n})\n\nexport class LandingScreenModule {}\n","export * from './transaction-rules-screen.component';\nexport * from './transaction-rules-screen.module';\nexport * from './transaction-rules-modal/transaction-rules-modal.component';\nexport * from './transaction-rules-table/transaction-rules-table.component';\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\nimport {AccountsService, AccountModel, TransactionRuleModel, accountValidator, differentValuesValidator} from '../../../common';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-transaction-rules-modal',\n  templateUrl: './transaction-rules-modal.component.html',\n  styleUrls: ['./transaction-rules-modal.component.scss']\n})\nexport class TransactionRulesModalComponent implements OnInit {\n  rulesFormGroup: FormGroup = new FormGroup({});\n  allAccounts: AccountModel [] = [];\n  creditFilteredAccounts: Observable<AccountModel []>;\n  debitFilteredAccounts: Observable<AccountModel []>;\n\n  editMode = false;\n\n  constructor(private accountsService: AccountsService,\n              private dialogRef: MatDialogRef<TransactionRulesModalComponent>,\n              @Inject(MAT_DIALOG_DATA) private existingRule: TransactionRuleModel) { }\n\n  ngOnInit(): void {\n    this.editMode = this.existingRule ? true : false;\n    this.allAccounts = this.accountsService.getAccounts();\n    this.rulesFormGroup = this.initializeFormGroup(this.existingRule);\n    this.setAccountsFilters();\n  }\n\n  saveRule(): void {\n    const newRule: TransactionRuleModel = {\n      description: this.rulesFormGroup.controls['description'].value,\n      creditAccount: this.rulesFormGroup.controls['creditAccount'].value,\n      debitAccount: this.rulesFormGroup.controls['debitAccount'].value\n    };\n\n    if (this.editMode) {\n      newRule.id = this.existingRule.id;\n    }\n\n    this.dialogRef.close(newRule);\n  }\n\n  private setAccountsFilters(): void {\n    this.creditFilteredAccounts = this.rulesFormGroup.controls['creditAccount'].valueChanges.pipe(\n      startWith(''),\n      map(this.filter),\n    );\n\n    this.debitFilteredAccounts = this.rulesFormGroup.controls['debitAccount'].valueChanges.pipe(\n      startWith(''),\n      map(this.filter),\n    );\n  }\n\n  private filter = (value: string): AccountModel[] => {\n    const filterValue = value.trim().toLowerCase();\n    return this.allAccounts.filter(account => account.id.toLowerCase().includes(filterValue));\n  }\n\n  private initializeFormGroup(existingRule?: TransactionRuleModel): FormGroup {\n    return new FormGroup({\n      debitAccount: new FormControl(existingRule?.debitAccount || '', [\n        Validators.required,\n        accountValidator(this.allAccounts),\n        differentValuesValidator('creditAccount')\n      ]),\n      creditAccount: new FormControl(existingRule?.creditAccount || '' , [\n        Validators.required,\n        accountValidator(this.allAccounts),\n        differentValuesValidator('debitAccount')\n      ]),\n      description: new FormControl(existingRule?.description || '', Validators.required)\n    });\n  }\n\n}\n","<div class=\"rules-modal-wrapper\">\n  <h2 *ngIf=\"!editMode\" mat-dialog-title>Add a new rule</h2>\n  <h2 *ngIf=\"editMode\" mat-dialog-title>Edit current rule</h2>\n\n  <mat-dialog-content>\n    <div class=\"transaction-rules-modal-content\" [formGroup]=\"rulesFormGroup\">\n      <mat-form-field>\n        <mat-label>Debit Account</mat-label>\n        <input type=\"text\"\n               autocomplete=\"off\"\n               placeholder=\"Add a debit account\"\n               matInput\n               [formControl]=\"rulesFormGroup.controls['debitAccount']\"\n               [matAutocomplete]=\"debitAutocomlete\">\n        <mat-autocomplete #debitAutocomlete=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of debitFilteredAccounts | async\" [value]=\"option.id\">\n            {{option.id}}\n          </mat-option>\n        </mat-autocomplete>\n        <mat-error>\n          <app-error-viewer [errors]=\"rulesFormGroup.controls['debitAccount'].errors\"></app-error-viewer>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Credit Account</mat-label>\n        <input autocomplete=\"off\"\n               type=\"text\"\n               placeholder=\"Add a credit account\"\n               matInput\n               [formControl]=\"rulesFormGroup.controls['creditAccount']\"\n               [matAutocomplete]=\"creditAutocomplete\">\n        <mat-autocomplete #creditAutocomplete=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of creditFilteredAccounts | async\" [value]=\"option.id\">\n            {{option.id}}\n          </mat-option>\n        </mat-autocomplete>\n        <mat-error>\n          <app-error-viewer [errors]=\"rulesFormGroup.controls['creditAccount'].errors\"></app-error-viewer>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Rule description</mat-label>\n        <textarea matInput\n                  placeholder=\"Add a rule description\"\n                  [formControl]=\"rulesFormGroup.controls['description']\">\n        </textarea>\n        <mat-error>\n          <app-error-viewer [errors]=\"rulesFormGroup.controls['description'].errors\"></app-error-viewer>\n        </mat-error>\n      </mat-form-field>\n\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"\">\n    <button mat-button mat-dialog-close >Cancel</button>\n    <button [disabled]=\"rulesFormGroup.invalid\"\n            mat-button\n            (click)=\"saveRule()\"\n            cdkFocusInitial\n    >\n      Save Rule\n    </button>\n  </mat-dialog-actions>\n</div>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {TransactionRulesService, TransactionRuleModel, AccountModel, AccountsService} from '../../common';\nimport {Subscription} from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport {TransactionRulesModalComponent} from './transaction-rules-modal/transaction-rules-modal.component';\nimport {Router} from '@angular/router';\nimport {BreadcrumbModel} from '../../common/components/breadcrumbs/model/breadcrumbs.model';\n\n@Component({\n  selector: 'app-transaction-rules-screen',\n  templateUrl: './transaction-rules-screen.component.html',\n  styleUrls: ['./transaction-rules-screen.component.scss']\n})\nexport class TransactionRulesScreenComponent implements OnInit, OnDestroy {\n  transactionRulesBreadcrumbs: BreadcrumbModel[] = [\n    {\n      name: 'accounts',\n      route: '/'\n    },\n    {\n      name: 'transaction-rules',\n      route: '/rules'\n    }\n  ];\n\n  allRules: TransactionRuleModel[] = [];\n  allAccounts: AccountModel[] = [];\n  rulesEventSubscription: Subscription;\n\n  constructor(private transactionRulesService: TransactionRulesService,\n              private modalService: MatDialog,\n              private router: Router,\n              private accountsService: AccountsService) { }\n\n  ngOnInit(): void {\n    this.allAccounts = this.accountsService.getAccounts();\n    this.rulesEventSubscription = this.transactionRulesService.getRules().subscribe(rules => {\n      //Todo chack why property binding not trigger onChanges in transaction-rules-table\n      // if we reasign rules directly\n      this.allRules = [];\n      this.allRules.push(...rules);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.rulesEventSubscription.unsubscribe();\n  }\n\n  addTransactionRule(): void {\n    const modalRef = this.modalService.open(TransactionRulesModalComponent);\n    modalRef.afterClosed().subscribe((newRule: TransactionRuleModel) => {\n      if (newRule) {\n        this.saveRule(newRule);\n      }\n    });\n  }\n\n  saveRule(rule: TransactionRuleModel): void {\n    if (this.allRules.length > 0) {\n      rule.id = this.allRules[this.allRules.length - 1].id + 1;\n    } else {\n      rule.id = 1;\n    }\n    this.transactionRulesService.addRule(rule);\n  }\n\n  deleteRule(rule: TransactionRuleModel): void {\n    this.transactionRulesService.deleteRule(rule);\n  }\n\n  editRule(rule: TransactionRuleModel): void {\n    const modalRef = this.modalService.open(TransactionRulesModalComponent, {\n      data: rule\n    });\n\n    modalRef.afterClosed().subscribe((editedRule: TransactionRuleModel) => {\n      if (editedRule) {\n        this.transactionRulesService.editRule(editedRule);\n      }\n    });\n  }\n}\n","<div>\n  <app-breadcrumbs [breadcrumbs]=\"transactionRulesBreadcrumbs\"></app-breadcrumbs>\n  <ng-container *ngIf=\"allAccounts\">\n    <h3>\n      In this screen, you can view, add, edit or delete your transaction rules. To edit or delete a rule\n      , click on that rule in the table below and perform that action. If you want to navigate back, click on\n      \"accounts\" link from the top navigation.\n    </h3>\n    <div>\n      <button (click)=\"addTransactionRule()\"\n              mat-raised-button\n              class=\"background-green-1\">Add Rule</button>\n    </div>\n    <div class=\"table-wrapper\">\n      <app-transaction-rules-table\n        [transactionRules]=\"allRules\"\n        (deleteRuleAction)=\"deleteRule($event)\"\n        (editRuleAction)=\"editRule($event)\"\n      >\n\n      </app-transaction-rules-table>\n    </div>\n  </ng-container>\n</div>\n\n\n","import {NgModule} from '@angular/core';\nimport {TransactionRulesScreenComponent} from './transaction-rules-screen.component';\nimport {CommonModule} from '@angular/common';\nimport {MatTableModule} from '@angular/material/table';\nimport { TransactionRulesTableComponent } from './transaction-rules-table/transaction-rules-table.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { TransactionRulesModalComponent } from './transaction-rules-modal/transaction-rules-modal.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {ComponentsModule} from '../../common';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n@NgModule({\n  declarations: [\n    TransactionRulesScreenComponent,\n    TransactionRulesTableComponent,\n    TransactionRulesModalComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    ComponentsModule,\n    MatIconModule,\n    MatPaginatorModule\n  ],\n  exports: [\n    TransactionRulesScreenComponent\n  ]\n})\n\nexport class TransactionRulesScreenModule {}\n","import {AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {TransactionRuleModel} from '../../../common/models/transaction-rule.model';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {MatTable, MatTableDataSource} from '@angular/material/table';\nimport {TransactionRulesService} from '../../../common';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-transaction-rules-table',\n  templateUrl: './transaction-rules-table.component.html',\n  styleUrls: ['./transaction-rules-table.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TransactionRulesTableComponent implements OnInit, AfterViewInit {\n  @Input()\n  set transactionRules(rules: TransactionRuleModel[]) {\n    this._transactionRules = rules;\n    this.dataSource.data = rules;\n  }\n\n  @Output() deleteRuleAction: EventEmitter<TransactionRuleModel> = new EventEmitter<TransactionRuleModel>();\n  @Output() editRuleAction: EventEmitter<TransactionRuleModel> = new EventEmitter<TransactionRuleModel>();\n\n\n  // tslint:disable-next-line:variable-name\n  _transactionRules: TransactionRuleModel[];\n  displayedColumns = ['id', 'debitAccount', 'creditAccount', 'description'];\n  displayedColumnsMapper = {\n    id: 'Rule ID',\n    debitAccount: 'Debit Account',\n    creditAccount: 'Credit Account',\n    description: 'Rule Description'\n  };\n  expendedRule: TransactionRuleModel | null;\n\n  dataSource = new MatTableDataSource<TransactionRuleModel>();\n\n  @ViewChild(MatTable) table: MatTable<TransactionRuleModel>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private transactionRulesSrvc: TransactionRulesService) { }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  deleteRule(rule: TransactionRuleModel): void {\n    this.deleteRuleAction.emit(rule);\n  }\n\n  editRule(rule: TransactionRuleModel): void {\n    this.editRuleAction.emit(rule);\n  }\n\n  addMockRules(): void {\n    this.transactionRulesSrvc.addMockedRules();\n  }\n\n}\n","<div class=\"table-container\">\n  <table mat-table\n         [dataSource]=\"dataSource\" multiTemplateDataRows\n         class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of displayedColumns\">\n      <th mat-header-cell *matHeaderCellDef> {{displayedColumnsMapper[column]}} </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n    </ng-container>\n\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n    <ng-container matColumnDef=\"expandedDetail\">\n      <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n        <div class=\"detailed-row-wrapper\"\n             [@detailExpand]=\"element == expendedRule ? 'expanded' : 'collapsed'\">\n          <div class=\"detailed-row-container\">\n            <div class=\"detailed-row-actions\">\n              <button (click)=\"deleteRule(element)\" mat-mini-fab color=\"warn\">\n                <mat-icon>delete</mat-icon>\n              </button>\n              <button (click)=\"editRule(element)\" mat-mini-fab class=\"background-green-1\">\n                <mat-icon>menu</mat-icon>\n              </button>\n            </div>\n          </div>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\"\n        class=\"table-row\"\n        [class.table-expended-row]=\"expendedRule === element\"\n        (click)=\"expendedRule = expendedRule === element ? null : element\">\n    </tr>\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"table-detailed-row\"></tr>\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" [attr.colspan]=\"displayedColumns.length\">\n        <div class=\"table-no-data-row\">\n          <h2>\n            You currently have no rules added yet. Please add some by pressing the \"Add Rule\" button right above the table\n          </h2>\n          <h2>\n            If you want, we can add some transactions rules for you to play with by pressing this\n            <button mat-mini-fab color=\"warn\" (click)=\"addMockRules()\">\n              <mat-icon>add</mat-icon>\n            </button>\n            button\n          </h2>\n        </div>\n      </td>\n    </tr>\n  </table>\n</div>\n<mat-paginator [pageSizeOptions]=\"[5,10, 25, 100]\" [pageSize]=\"10\" ></mat-paginator>\n\n","export * from './validate-transactions-screen.module';\nexport * from './validate-transactions-screen.component';\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {\n  AccountModel,\n  AccountsService,\n  TransactionRuleModel,\n  TransactionRulesService,\n  differentValuesValidator,\n  accountValidator\n} from '../../common';\nimport {map, startWith} from 'rxjs/operators';\nimport {combineLatest, Observable} from 'rxjs';\nimport {BreadcrumbModel} from '../../common/components/breadcrumbs/model/breadcrumbs.model';\n\n@Component({\n  selector: 'app-validate-transactions-screen',\n  templateUrl: './validate-transactions-screen.component.html',\n  styleUrls: ['./validate-transactions-screen.component.scss']\n})\nexport class ValidateTransactionsScreenComponent implements OnInit {\n  accountsFormGroup: FormGroup = new FormGroup({});\n  allAccounts: AccountModel [] = [];\n  allRules: TransactionRuleModel [] = [];\n  filteredRules: TransactionRuleModel[] = [];\n  creditFilteredAccounts: Observable<AccountModel []>;\n  debitFilteredAccounts: Observable<AccountModel []>;\n  whichAccounts: 'both' | 'debit' | 'credit' = 'both';\n  validateScreenBreadcrumbs: BreadcrumbModel [] = [\n    {\n      name: 'accounts',\n      route: '/'\n    },\n    {\n      name: 'validate-transactions',\n      route: '/validate'\n    }\n  ];\n\n  constructor(private accountsService: AccountsService,\n              private rulesService: TransactionRulesService) { }\n\n  get selectedCreditAccount(): AccountModel {\n    return this.accountsFormGroup.controls.creditAccount.value;\n  }\n\n  get selectedDebitAccount(): AccountModel {\n    return this.accountsFormGroup.controls.debitAccount.value;\n  }\n\n  ngOnInit(): void {\n    this.allAccounts = this.accountsService.getAccounts();\n    if (this.allAccounts?.length > 0) {\n      this.rulesService.getRules().subscribe(rules => {\n        this.allRules = rules;\n      });\n      this.accountsFormGroup = this.initializeFormGroup();\n      this.setAccountsFilters();\n      this.filterRules();\n    }\n  }\n\n  private setAccountsFilters(): void {\n    this.creditFilteredAccounts = this.accountsFormGroup.controls.creditAccount.valueChanges.pipe(\n      startWith(''),\n      map(this.filter),\n    );\n\n    this.debitFilteredAccounts = this.accountsFormGroup.controls.debitAccount.valueChanges.pipe(\n      startWith(''),\n      map(this.filter),\n    );\n  }\n\n  private filter = (value: string): AccountModel[] => {\n    const filterValue = value.trim().toLowerCase();\n    return this.allAccounts.filter(account => account.id.toLowerCase().includes(filterValue));\n  }\n\n  private initializeFormGroup(existingRule?: TransactionRuleModel): FormGroup {\n    return new FormGroup({\n      debitAccount: new FormControl(existingRule?.debitAccount || '', [\n        accountValidator(this.allAccounts),\n        differentValuesValidator('creditAccount')\n      ]),\n      creditAccount: new FormControl(existingRule?.creditAccount || '' , [\n        accountValidator(this.allAccounts),\n        differentValuesValidator('debitAccount')\n      ]),\n    });\n  }\n\n  filterRules(): void {\n    const creditAccount = this.accountsFormGroup.controls.creditAccount;\n    const debitAccount = this.accountsFormGroup.controls.debitAccount;\n\n    combineLatest([\n      creditAccount.valueChanges.pipe(startWith('')),\n      debitAccount.valueChanges.pipe(startWith(''))\n    ]).subscribe(([newCredit, newDebit]) => {\n      this.filteredRules = this.allRules.filter((rule) => {\n        switch (this.whichAccounts) {\n          case 'both':\n            return rule.creditAccount === newCredit && rule.debitAccount === newDebit;\n            break;\n          case 'credit':\n            return rule.creditAccount === newCredit;\n            break;\n          case 'debit':\n            return rule.debitAccount === newDebit;\n        }\n      });\n    });\n  }\n\n  // TODO buttons group value changed is trigger twiced and first value is always undefined then the actual value is passed\n  updateAccountsSelection(newSelection): void {\n    if (newSelection) {\n      this.whichAccounts = newSelection;\n      switch (newSelection) {\n        case 'both': {\n          this.accountsFormGroup.controls.debitAccount.enable();\n          this.accountsFormGroup.controls.creditAccount.enable();\n          break;\n        }\n        case 'credit': {\n          this.accountsFormGroup.controls.debitAccount.disable();\n          this.accountsFormGroup.controls.creditAccount.enable();\n          break;\n        }\n        case 'debit': {\n          this.accountsFormGroup.controls.debitAccount.enable();\n          this.accountsFormGroup.controls.creditAccount.disable();\n          break;\n        }\n      }\n    }\n  }\n\n}\n","<div class=\"validate-transaction-screen\">\n  <app-breadcrumbs [breadcrumbs]=\"validateScreenBreadcrumbs\"></app-breadcrumbs>\n  <ng-container *ngIf=\"allAccounts?.length > 0\">\n    <h3>\n      Select a debit account and a credit account from the lists above and then a list will\n      appear with all the transaction rules available for this accounts. You can choose between seeing transaction\n      rules for a specific credit / debit account or for a pair of accounts.\n    </h3>\n    <div>\n      <mat-button-toggle-group [value]=\"whichAccounts\"\n                               (valueChange)=\"updateAccountsSelection($event)\"\n      >\n        <mat-button-toggle value=\"both\">Debit&Credit</mat-button-toggle>\n        <mat-button-toggle value=\"debit\">Only Debit</mat-button-toggle>\n        <mat-button-toggle value=\"credit\">Only Credit</mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n    <div class=\"validate-transaction-fields\">\n      <mat-form-field *ngIf=\"whichAccounts === 'both' || whichAccounts === 'debit'\">\n        <mat-label>Select a debit account</mat-label>\n        <input type=\"text\"\n               autocomplete=\"off\"\n               placeholder=\"Debit Account\"\n               matInput\n               [formControl]=\"accountsFormGroup.controls['debitAccount']\"\n               [matAutocomplete]=\"debitAutocomlete\">\n        <mat-autocomplete #debitAutocomlete=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of debitFilteredAccounts | async\" [value]=\"option.id\">\n            {{option.id}}\n          </mat-option>\n        </mat-autocomplete>\n        <mat-error>\n          <app-error-viewer [errors]=\"accountsFormGroup.controls['debitAccount'].errors\"></app-error-viewer>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field *ngIf=\"whichAccounts === 'both' || whichAccounts === 'credit'\">\n        <mat-label>Select a credit account</mat-label>\n        <input autocomplete=\"off\"\n               type=\"text\"\n               placeholder=\"Credit Account\"\n               matInput\n               [formControl]=\"accountsFormGroup.controls['creditAccount']\"\n               [matAutocomplete]=\"creditAutocomplete\">\n        <mat-autocomplete #creditAutocomplete=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of creditFilteredAccounts | async\" [value]=\"option.id\">\n            {{option.id}}\n          </mat-option>\n        </mat-autocomplete>\n        <mat-error>\n          <app-error-viewer [errors]=\"accountsFormGroup.controls['creditAccount'].errors\"></app-error-viewer>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div *ngIf=\"accountsFormGroup.valid\" class=\"available-rules\">\n      <div *ngIf=\"filteredRules && filteredRules.length > 0;else noRules\">\n        <ul>\n          <li *ngFor=\"let rule of filteredRules\">\n            Debit account <b>{{rule.debitAccount}}</b> can receive from credit account <b>{{rule.creditAccount}}</b> when\n            <b>{{rule.description}}</b>\n          </li>\n        </ul>\n      </div>\n      <ng-template [ngSwitch]=\"whichAccounts\" #noRules>\n        <h3 *ngSwitchCase=\"'both'\">\n          You don't have any rules for the credit account {{selectedCreditAccount}} and the debit account {{selectedDebitAccount}}.\n          Please add some or change the accounts\n        </h3>\n        <h3 *ngSwitchCase=\"'credit'\">\n          You don't have any rules for the credit account {{selectedCreditAccount}}\n        </h3>\n        <h3 *ngSwitchCase=\"'debit'\">\n          You don't have any rules for the debit account {{selectedDebitAccount}}\n        </h3>\n      </ng-template>\n    </div>\n  </ng-container>\n\n</div>\n","import {NgModule} from '@angular/core';\nimport {ValidateTransactionsScreenComponent} from './validate-transactions-screen.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {ComponentsModule} from '../../common';\nimport {CommonModule} from '@angular/common';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\n\n@NgModule({\n  declarations: [\n    ValidateTransactionsScreenComponent\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    ComponentsModule,\n    MatButtonToggleModule,\n    FormsModule,\n  ],\n  exports: [\n    ValidateTransactionsScreenComponent\n  ]\n})\n\nexport class ValidateTransactionsScreenModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}